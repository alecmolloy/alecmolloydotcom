stroke 0

vertices = 96
rings = 26
centreOffset = 50

pointMap = new Array(rings)

for ring in [0 ... rings]
    distance = ((ring / rings) * (250 - centreOffset)) + centreOffset
    pointMap[ring] = new Array(vertices)
    for vertex in [0 ... vertices]
        angle = (vertex / vertices) * Math.PI * 2
        angle += (ring / vertices) * Math.PI * 2
        angle += (1 / vertices) *
        x = (Math.cos(angle) * distance) + 250
        y = (Math.sin(angle) * distance) + 250
        pointMap[ring][vertex] = {x, y}

for r in [0 ... rings - 1]
    currentRing = pointMap[r]
    nextRing = pointMap[r + 1]
    for v in [0 ... vertices]
        vertex0 = currentRing[v]
        vertex1
        if v == vertices - 1
            vertex1 = currentRing[0]
        else
            vertex1 = currentRing[v + 1]
        vertex2 = nextRing[v]
        moveTo vertex0.x, vertex0.y
        polygon 0, 0,
            vertex1.x - vertex0.x, vertex1.y - vertex0.y
            vertex2.x - vertex1.x, vertex2.y - vertex1.y
            close